<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dawn.mapper.TypeMapper">
  <resultMap id="BaseResultMap" type="com.dawn.model.Type">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_type
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_type
    where name = #{name}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dawn.model.Type">
    insert into t_type (id, name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.dawn.model.Type">
    insert into t_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.dawn.model.Type">
    update t_type
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dawn.model.Type">
    update t_type
    set name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getTotalByCondition" resultType="int">
    select count(*)
    from t_type
  </select>

  <select id="getTypeListByCondition" resultMap="BaseResultMap">
    select
     <include refid="Base_Column_List" />
    from t_type
    order by id desc
    limit #{pageNum}, #{pageSize}
  </select>

  <select id="getAllType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_type
  </select>

  <select id="listTypeTop" resultType="com.dawn.vo.TopVO">
   select type.name, type.id, ifNull(a.count, 0) as count
   from t_type type
   left join(
   select  t.name, t.id, count(b.id) as count
   from t_blog b
   right join t_type t
   on b.type_id = t.id
   where b.published = 1
   group by t.name
   ) a
   on type.id = a.id
   order by a.count desc
   limit #{size}
  </select>
</mapper>